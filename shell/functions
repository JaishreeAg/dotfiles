#
# Functions
#

ssh-reagent () {
  ssh-add -l &> /dev/null && return 0
  for agent in /tmp/ssh-*/agent.*; do
    export SSH_AUTH_SOCK=$agent
    if ssh-add -l 2>&1 > /dev/null; then
      echo Found working SSH Agent:
      ssh-add -l
      return
    fi
  done
  echo "Cannot find ssh agent - maybe you should reconnect and forward it?"
}

psgrep() {
  if [ -n "$1" ] ; then
    ps aux | grep $1 | grep -v grep
  else
    echo "!! Need name to grep for"
  fi
}

ftest() {
  local fabtest='-s --timeout 0'
  if [ -n "$1" ] ; then
    fabtest="$fabtest uber.tests.$1"
  else
    echo 'I need something to test'
    return
  fi

  if [ -n "$2" ] ; then
    fabtest="$fabtest -k $2"
  fi
  fab test:"$fabtest"
}

vimwrap() {
  if [ -z "$1" ] && [ `pwd` != "$HOME" ] ; then
    vim -c 'CommandT'
  else
    vim $@
  fi
}
alias vim=vimwrap

pushdot() {
  [ -z "$1" ] && echo "Need a commit message" && return 1
  pushd ~/.dotfiles
  git add .
  git commit -n -m "$*"
  git push origin master
  popd
}

watch-test() {
  [ -z "$1" ] && echo "Need a target" && return 1
  fswatch -o -e "\.pyc" $@ | xargs -n1 -I{} make
}

type gcm >/dev/null && unalias gcm
# Allow git commit -m and auto-quote arguments
gcm () {
  nocorrect git commit -m "$*"
}
